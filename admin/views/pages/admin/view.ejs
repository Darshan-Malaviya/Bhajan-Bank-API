<%- include('../../layouts/head.ejs') %>
<style>

</style>
<%- include('../../layouts/sidebar.ejs') %>
<div class="container-fluid">
  <div class="row">

    <div class="col-md-6">
      <div class="card card-primary">
        <div class="card-header">
          <h3 class="card-title">Personal Details</h3>
        </div>
        <form id="mainform">
          <input type="hidden" name="csrfToken" value="<% if(locals.csrfToken){ %><%= csrfToken %><% } %>" class="form-control">

          <div class="card-body">
            <div class="form-group">
              <label for="name">Name</label>
              <input type="text" class="form-control" name="name" id="name" placeholder="Enter name" value="<% if(locals.row){ %><%= row.name %><% } %>">
            </div>
            <div class="form-group">
              <label for="email">Email</label>
              <input type="text" class="form-control" name="email" id="email" placeholder="Enter email" value="<% if(locals.row){ %><%= row.email %><% } %>">
            </div>
            <% if (operation == 'create') { %>
            <div class="form-group">
              <label for="password">Password</label>
              <input type="password" class="form-control" name="password" id="password" placeholder="Enter Password" value="<% if(locals.row){ %><%= row.password %><% } %>">
            </div>
            <% } %>
          </div>
          <div class="card-footer">
            <button type="submit" id="submitBtn" class="btn btn-success float-right">Submit</button>
          </div>
        </form>
      </div>
    </div>

    <% if(operation == 'update') { %>
    <% if (new PermissionChecker(locals.user).hasPermission('edit_admin')) { %>
    <div class="col-md-6">
      <div class="card card-primary">
        <div class="card-header">
          <h3 class="card-title">Reset Password</h3>
        </div>
        <form id="passwordform">
          <input type="hidden" name="csrfToken" value="<% if(locals.csrfToken){ %><%= csrfToken %><% } %>" class="form-control">
          <div class="card-body">
            <div class="form-group">
              <label for="password">Password</label>
              <input type="password" class="form-control" name="password" id="password" placeholder="Enter Password">
            </div>
            <div class="form-group">
              <label for="confirmPassword">Confirm Password</label>
              <input type="password" class="form-control" name="confirmPassword" id="confirmPassword" placeholder="Confirm Password">
            </div>
          </div>
          <div class="card-footer">
            <button type="submit" id="submitBtn" class="btn btn-success float-right">Submit</button>
          </div>
        </form>
      </div>
    </div>
    <% } %>

    <% if (new PermissionChecker(locals.user).hasPermission('handle_permissions')) { %>
    <div class="col-md-12">
      <div class="card card-primary">

        <div class="card-header">
          <h3 class="card-title">Permissions</h3>
        </div>

        <div class="card-body permissions">
          <div class="row">
            <% for( var i = 0; i < permissions.length; i++ ) {
              var contentType = permissions[i].contentType;
              var tablePermissions = permissions[i].permissions;
              %>
            <div class="col-sm-3">
              <div class="form-group">
                <label><%= contentType %></label>
                <% for( var j = 0; j < tablePermissions.length; j++ ) {
                var permission = tablePermissions[j];
                %>
                <div class="custom-control custom-checkbox">
                  <input class="custom-control-input" type="checkbox" id="<%= permission.id %>" <% if(permission.granted){ %> checked <% } %> name="permissionCheckbox">
                  <label for="<%= permission.id %>" class="custom-control-label"><%= permission.name %></label>
                </div>
                <% } %>
              </div>
            </div>
            <% } %>
          </div>
        </div>

        <div class="card-footer">
          <button type="submit" id="permissionBtn" class="btn btn-success float-right">Submit</button>
        </div>

      </div>
    </div>
    <% } %>
    <% } %>

  </div>
</div>


<%- include('../../layouts/footer.ejs') %>
<script>
  $().ready(function() {

    var table = '<%= table %>';
    var id = '<% if(locals.id){ %><%= id %><% } %>';
    var operation = '<%= operation %>';

    var mainForm = $('#mainform').validate({
      rules: {
        name: {
          required: true,
          minlength: 3,
          maxlength: 30
        },
        email: {
          required: true,
          email: true,
        },
        password: {
          required: true,
          minlength: 6,
          maxlength: 30
        }
      },
      messages: {
        name: {
          required: "Please enter a name",
          minlength: "Name must consist of at least 3 characters",
          maxlength: "Name must consist of at least 30 characters"
        },
        email: {
          required: "Please enter a email",
          email: "Please enter a valid email address"
        },
        password: {
          required: "Please enter a password",
          minlength: "Password must be at least 6 characters long",
          maxlength: "Password must be at less than 30 characters long"
        }
      },
      errorElement: 'span',
      errorPlacement: function(error, element) {
        error.addClass('invalid-feedback');
        element.closest('.form-group').append(error);
      },
      highlight: function(element, errorClass, validClass) {
        $(element).addClass('is-invalid');
      },
      unhighlight: function(element, errorClass, validClass) {
        $(element).removeClass('is-invalid');
      }
    });

    var passwordform = $('#passwordform').validate({
      rules: {
        password: {
          required: true,
          minlength: 8,
          maxlength: 30
        },
        confirmPassword: {
          required: true,
          minlength: 8,
          maxlength: 30,
          equalTo: "#password"
        }
      },
      messages: {
        password: {
          required: "Please enter a password",
          minlength: "Password must be at least 8 characters long",
          maxlength: "Password must be at less than 30 characters long"
        },
        confirmPassword: {
          required: "Please enter a password",
          minlength: "Password must be at least 8 characters long",
          maxlength: "Password must be at less than 30 characters long",
          equalTo: "Password and confirm password must match"
        }
      },
      errorElement: 'span',
      errorPlacement: function(error, element) {
        error.addClass('invalid-feedback');
        element.closest('.form-group').append(error);
      },
      highlight: function(element, errorClass, validClass) {
        $(element).addClass('is-invalid');
      },
      unhighlight: function(element, errorClass, validClass) {
        $(element).removeClass('is-invalid');
      }
    });

    <% if (new PermissionChecker(locals.user).hasAnyPermission(['create_admin','edit_admin'])) { %>
    $("form#mainform").submit(() => {
      if (mainForm.valid()) {
        $('#submitBtn').attr('disabled', true);
        $('#submitBtn').addClass('btn-progress')
        $.ajax({
          url: "/admin/<%= table %>/<%= operation %>/<% if(locals.id){ %><%= id %><% } %>",
          type: "POST",
          data: $("form#mainform").serialize(),
          success: function(data) {
            if (data.status) {
              Toast.fire({
                icon: 'success',
                title: data.message
              });
              if (operation == 'create') {
                setTimeout(() => {
                  location.replace("/admin/" + table + "/update/" + data.id);
                }, 2000);
              }
            } else {
              Toast.fire({
                icon: 'error',
                title: data.message
              });
            }
            $('#submitBtn').attr('disabled', false);
            $('#submitBtn').removeClass('btn-progress')
          },
          error: function(data) {
            console.log(data);
            Toast.fire({
              icon: 'error',
              title: data.status + ' ' + data.statusText
            });
            $('#submitBtn').attr('disabled', false);
            $('#submitBtn').removeClass('btn-progress')
          }
        });

      } else {
        mainForm.focusInvalid();
      }
      return false;
    });
    <% } %>

    <% if (new PermissionChecker(locals.user).hasPermission('edit_admin')) { %>
    $("form#passwordform").submit(() => {
      if (passwordform.valid()) {
        $('#passwordBtn').attr('disabled', true);
        $('#passwordBtn').addClass('btn-progress')
        $.ajax({
          url: "/admin/admin/reset-password/" + id,
          type: "POST",
          data: $("form#passwordform").serialize(),
          success: function(data) {
            if (data.status) {
              Toast.fire({
                icon: 'success',
                title: data.message
              });
              $('form#passwordform').trigger('reset');
            } else {
              Toast.fire({
                icon: 'error',
                title: data.message
              });
            }
            $('#passwordBtn').attr('disabled', false);
            $('#passwordBtn').removeClass('btn-progress')
          },
          error: function(data) {
            console.log(data);
            Toast.fire({
              icon: 'error',
              title: data.status + ' ' + data.statusText
            });
            $('#passwordBtn').attr('disabled', false);
            $('#passwordBtn').removeClass('btn-progress')
          }
        });
      } else {
        passwordform.focusInvalid();
      }
      return false;
    });
    <% } %>


    <% if (new PermissionChecker(locals.user).hasPermission('handle_permissions')) { %>
    $("#permissionBtn").click(() => {
      $('#permissionBtn').attr('disabled', true);
      $('#permissionBtn').addClass('btn-progress');


      if (id == '') {
        Toast.fire({
          icon: 'error',
          title: 'Please save the user first'
        });
        return false;
      }
      var permCheckboxs = $('input[name="permissionCheckbox"]');
      var permissions = [];
      for (var i = 0; i < permCheckboxs.length; i++) {
        var permCheckbox = permCheckboxs[i];
        if (permCheckbox.checked) {
          permissions.push(permCheckbox.id);
        }
      }
      console.log(permissions);

      $.ajax({
        url: "/admin/admin/user-permissions/" + id,
        type: "POST",
        data: {
          permissions: permissions
        },
        success: function(data) {
          if (data.status) {
            Toast.fire({
              icon: 'success',
              title: data.message
            });
          } else {
            Toast.fire({
              icon: 'error',
              title: data.message
            });
          }
          $('#permissionBtn').attr('disabled', false);
          $('#permissionBtn').removeClass('btn-progress');
        },
        error: function(data) {
          Toast.fire({
            icon: 'error',
            title: data.status + ' ' + data.statusText
          });
          $('#permissionBtn').attr('disabled', false);
          $('#permissionBtn').removeClass('btn-progress');
        }
      });

    });
    <% } %>

  });
</script>

</body>

</html>